services:
  nginx:
    image: nginx
    volumes:
      - ./nginx/main-domain.conf.template:/etc/nginx/templates/main-domain.conf.template
      - ./nginx/auth-domain.conf.template:/etc/nginx/templates/auth-domain.conf.template
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/www:/var/www:ro
      - ./nginx/ssl:/etc/letsencrypt
      - ./certbot/webroot:/tmp/certbot
    env_file:
      - .env
    depends_on:
      - core
      - workflow
      - vue-portal
      - portal
      - workflow-portal
      - finmars-start-page
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
    env_file:
      - .env
    ports:
      - "80:80" 
    command: [
      "certonly",
      "--standalone",
      "--non-interactive",
      "--agree-tos",
      "-d", "${MAIN_DOMAIN_NAME}",
      "-d", "${AUTH_DOMAIN_NAME}"
    ]

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    command: start --import-realm
    volumes:
      - ./keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf:ro
      - ./nginx/ssl:/etc/letsencrypt
      - ./keycloak/themes/finmars:/opt/keycloak/themes/finmars
      - ./keycloak/config/:/opt/keycloak/data/import
    env_file:
      - .env
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=db_keycloak
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_BOOTSTRAP_ADMIN_USERNAME=${ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - KEYCLOAK_ADMIN=${ADMIN_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import
    ports:
      - "8004:8080"
    depends_on:
      - db_keycloak

  core:
    build: ../finmars-core
    volumes:
      - ../finmars-core/poms:/var/app/poms
    env_file:
      - .env
    environment:
      - DB_NAME=core_realm00000
    depends_on:
      - db
      - rabbitmq
      - redis
      - keycloak
    ports:
      - "8000:8080"

  core-worker:
    build: ../finmars-core 
    env_file:
      - .env
    environment:
      - DB_NAME=core_realm00000
      - DJANGO_SETTINGS_MODULE=poms_app.settings
      - INSTANCE_TYPE=worker
    depends_on:
      - db
      - rabbitmq
      - redis

  core-migration:
    build: ../finmars-core
    env_file:
      - .env
    environment:
      - DB_NAME=core_realm00000
      - INSTANCE_TYPE=job
    depends_on:
      - db
      - redis

  workflow:
    build: ../finmars-workflow
    volumes:
      - ../finmars-workflow/workflow:/var/app/workflow
    env_file:
      - .env
    environment:
      - DB_NAME=workflow_realm00000
    depends_on:
      - db
      - rabbitmq
      - redis
      - keycloak
    ports:
      - "8001:8080"

  workflow-worker:
    build: ../finmars-workflow
    env_file:
      - .env
    environment:
      - DB_NAME=workflow_realm00000
      - INSTANCE_TYPE=worker
      - DJANGO_SETTINGS_MODULE=workflow_app.settings
    depends_on:
      - db
      - rabbitmq
      - redis
      - keycloak

  workflow-scheduler:
    build: ../finmars-workflow
    env_file:
      - .env
    environment:
      - DB_NAME=workflow_realm00000
      - INSTANCE_TYPE=beat
      - DJANGO_SETTINGS_MODULE=workflow_app.settings
    depends_on:
      - db
      - redis

  workflow-migration:
    build: ../finmars-workflow
    env_file:
      - .env
    environment:
      - DB_NAME=workflow_realm00000
      - INSTANCE_TYPE=job
    depends_on:
      - db
      - redis

  finmars-start-page:
    build: ../finmars-start-page
    env_file:
      - .env
    ports:
      - "8083:8080"

  portal:
    build: ../finmars-portal
    env_file:
      - .env
    ports:
      - "8080:8080" 

  vue-portal:
    build: ../finmars-vue-portal
    environment:
      - NUXT_APP_BUILD_ASSETS_DIR=/realm00000/v/_nuxt/
    env_file:
      - .env
    ports:
      - "8081:8080"

  workflow-portal:
    build: ../finmars-workflow-portal
    environment:
      - NUXT_APP_BUILD_ASSETS_DIR=/realm00000/w/_nuxt/
    env_file:
      - .env
    ports:
      - "8082:8080"

  db:
    image: postgres:13-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRESQL_MAX_OPEN_CONNS: 500
    stdin_open: true
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  db_keycloak:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    stdin_open: true
    tty: true
    ports:
      - "5435:5432"
    volumes:
      - ./postgres_data_keycloak:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
    stdin_open: true
    tty: true

  redis:
    image: redis
    ports:
      - "6379:6379"
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  authorizer_postgres_data:
  certbot-webroot:
